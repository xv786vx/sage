datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

generator client {
  provider = "prisma-client-js"
}

model Task {
  id         Int       @id @default(autoincrement())
  title      String
  context    String?
  startTime  DateTime  @default(now())
  endTime    DateTime  @default(now())
  priority   Priority
  sessionId String


  Schedule   Schedule? @relation(fields: [scheduleId], references: [id])
  scheduleId Int?
  user       User?     @relation(fields: [userId], references: [id])
  userId     String?
}

model Schedule {
  id     Int     @id @default(autoincrement())
  tasks  Task[]
  user   User?   @relation(fields: [userId], references: [id])
  userId String?
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String    @unique
  hashedPassword String?
  emailVerified  DateTime?
  image          String?
  accounts       Account[]
  role           UserRole? @default(ADMIN)

  schedules Schedule[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Task      Task[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}
